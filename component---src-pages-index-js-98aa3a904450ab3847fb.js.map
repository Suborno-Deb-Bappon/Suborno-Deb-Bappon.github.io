{"version":3,"sources":["webpack:///./src/components/sections/certifications.js","webpack:///./src/pages/index.js"],"names":["colors","theme","fontSizes","fonts","StyledContainer","styled","Section","StyledInner","div","media","tablet","StyledTabList","ul","mixins","link","SFMono","smish","slate","transition","green","lightNavy","StyledTabContent","StyledItem","lg","lightestSlate","phablet","md","sm","Certifications","data","revealContainer","useRef","categories","node","frontmatter","items","useState","activeTab","setActiveTab","useEffect","sr","reveal","current","srConfig","id","ref","role","map","item","i","key","className","onClick","tabIndex","category","certifications","name","nameUrl","description","href","target","rel","StyledMainContainer","Main","pageQuery","IndexPage","location","hero","edges","about","skills","education","jobs","featured","projects","publications","extracurricular","awards","contact"],"mappings":"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","file":"component---src-pages-index-js-98aa3a904450ab3847fb.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport sr from '@utils/sr';\r\nimport { srConfig } from '@config';\r\nimport styled from 'styled-components';\r\nimport { theme, mixins, media, Section, Heading } from '@styles';\r\n\r\nconst { colors, fontSizes, fonts } = theme;\r\n\r\nconst StyledContainer = styled(Section)`\r\n  max-width: 900px;\r\n`;\r\n\r\nconst StyledInner = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  ${media.tablet`\r\n    flex-direction: column;\r\n  `}\r\n`;\r\n\r\nconst StyledTabList = styled.ul`\r\n  position: relative;\r\n  z-index: 3;\r\n  width: 100%;\r\n  padding: 0;\r\n  margin: 0;\r\n  list-style: none;\r\n  display: flex;\r\n  flex-direction: column; /* Force one per row */\r\n  gap: 5px;\r\n\r\n  ${media.tablet`\r\n    flex-direction: row;\r\n    overflow-x: auto;\r\n    white-space: nowrap;\r\n    gap: 0;\r\n  `}\r\n\r\n  li {\r\n    ${mixins.link};\r\n    padding: 15px 20px;\r\n    font-family: ${fonts.SFMono};\r\n    font-size: ${fontSizes.smish};\r\n    color: ${colors.slate};\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n    border-left: 2px solid transparent;\r\n    transition: ${theme.transition};\r\n    white-space: normal; /* Important for line breaks on long tab names */\r\n\r\n    &:hover,\r\n    &:focus {\r\n      color: ${colors.green};\r\n      background-color: ${colors.lightNavy};\r\n    }\r\n\r\n    &.active {\r\n      color: ${colors.green};\r\n      border-left: 2px solid ${colors.green};\r\n      background-color: ${colors.lightNavy};\r\n    }\r\n\r\n    ${media.tablet`\r\n      border-left: none;\r\n      border-bottom: 2px solid transparent;\r\n      &.active {\r\n        border-bottom: 2px solid ${colors.green};\r\n      }\r\n    `}\r\n  }\r\n`;\r\n\r\n\r\nconst StyledTabContent = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  padding-left: 30px;\r\n  ${media.tablet`padding-left: 0;`};\r\n`;\r\n\r\nconst StyledItem = styled.div`\r\n  margin-bottom: 30px;\r\n  padding-left: 25px;\r\n  border-left: 2px solid ${colors.green};\r\n  position: relative;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    left: -7px;\r\n    top: 6px;\r\n    width: 10px;\r\n    height: 10px;\r\n    background-color: ${colors.green};\r\n    border-radius: 50%;\r\n    z-index: 1;\r\n  }\r\n\r\n  h4 {\r\n    margin: 0 0 5px;\r\n    font-size: ${fontSizes.lg};\r\n    font-weight: 600;\r\n    color: ${colors.lightestSlate};\r\n\r\n    a {\r\n      color: ${colors.lightestSlate};\r\n      text-decoration: none;\r\n      transition: ${theme.transition};\r\n\r\n      &:hover,\r\n      &:focus {\r\n        color: ${colors.green};\r\n        text-decoration: none;\r\n      }\r\n    }\r\n\r\n    ${media.phablet`font-size: ${fontSizes.md};`}\r\n  }\r\n\r\n  p {\r\n    margin: 0;\r\n    font-size: ${fontSizes.sm};\r\n    color: ${colors.slate};\r\n  }\r\n`;\r\n\r\nconst Certifications = ({ data }) => {\r\n  const revealContainer = useRef(null);\r\n  const categories = data[0]?.node.frontmatter.items || [];\r\n\r\n  const [activeTab, setActiveTab] = useState(0);\r\n\r\n  useEffect(() => {\r\n    sr.reveal(revealContainer.current, srConfig());\r\n  }, []);\r\n\r\n  return (\r\n    <StyledContainer id=\"certifications\" ref={revealContainer}>\r\n      <Heading>Certifications</Heading>\r\n      <StyledInner>\r\n        <StyledTabList role=\"tablist\">\r\n          {categories.map((item, i) => (\r\n            <li\r\n              key={i}\r\n              className={i === activeTab ? 'active' : ''}\r\n              onClick={() => setActiveTab(i)}\r\n              role=\"tab\"\r\n              tabIndex={0}>\r\n              {item.category}\r\n            </li>\r\n          ))}\r\n        </StyledTabList>\r\n        <StyledTabContent>\r\n          {categories[activeTab] &&\r\n            categories[activeTab].certifications.map(({ name, nameUrl, description }, i) => (\r\n              <StyledItem key={i}>\r\n                <h4>\r\n                  {nameUrl ? (\r\n                    <a href={nameUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      {name}\r\n                    </a>\r\n                  ) : (\r\n                    name\r\n                  )}\r\n                </h4>\r\n                <p>{description}</p>\r\n              </StyledItem>\r\n            ))}\r\n        </StyledTabContent>\r\n      </StyledInner>\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nCertifications.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Certifications;\r\n\r\n\r\n\r\n// import React, { useEffect, useRef } from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import sr from '@utils/sr';\r\n// import { srConfig } from '@config';\r\n// import styled from 'styled-components';\r\n// import { theme, mixins, media, Section, Heading } from '@styles';\r\n\r\n// const { colors, fontSizes } = theme;\r\n\r\n// const StyledContainer = styled(Section)`\r\n//   position: relative;\r\n//   max-width: 700px;\r\n// `;\r\n\r\n// const StyledItem = styled.div`\r\n//   margin-bottom: 30px;\r\n//   padding-left: 25px;\r\n//   border-left: 2px solid ${colors.green};\r\n//   position: relative;\r\n\r\n//   &:before {\r\n//     content: '';\r\n//     position: absolute;\r\n//     left: -7px;\r\n//     top: 6px;\r\n//     width: 10px;\r\n//     height: 10px;\r\n//     background-color: ${colors.green};\r\n//     border-radius: 50%;\r\n//     z-index: 1;\r\n//   }\r\n\r\n//   h4 {\r\n//     margin: 0 0 5px;\r\n//     font-size: ${fontSizes.lg};\r\n//     font-weight: 600;\r\n//     color: ${colors.lightestSlate};\r\n\r\n//     a {\r\n//       color: ${colors.lightestSlate};\r\n//       text-decoration: none;\r\n//       transition: ${theme.transition};\r\n//       cursor: pointer;\r\n\r\n//       &:hover,\r\n//       &:focus {\r\n//         color: ${colors.green};\r\n//         text-decoration: none;\r\n//       }\r\n//     }\r\n\r\n//     ${media.phablet`\r\n//       font-size: ${fontSizes.md};\r\n//     `}\r\n//   }\r\n\r\n//   p {\r\n//     margin: 0;\r\n//     font-size: ${fontSizes.sm};\r\n//     color: ${colors.slate};\r\n//   }\r\n// `;\r\n\r\n// const Certifications = ({ data }) => {\r\n//   const revealContainer = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     sr.reveal(revealContainer.current, srConfig());\r\n//   }, []);\r\n\r\n//   const certs = data[0]?.node.frontmatter.items || [];\r\n\r\n//   return (\r\n//     <StyledContainer id=\"certifications\" ref={revealContainer}>\r\n//       <Heading>Certifications</Heading>\r\n//       <div>\r\n//         {certs.map(({ name, nameUrl, description }, i) => (\r\n//           <StyledItem key={i}>\r\n//             <h4>\r\n//               {nameUrl ? (\r\n//                 <a href={nameUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n//                   {name}\r\n//                 </a>\r\n//               ) : (\r\n//                 name\r\n//               )}\r\n//             </h4>\r\n//             <p>{description}</p>\r\n//           </StyledItem>\r\n//         ))}\r\n//       </div>\r\n//     </StyledContainer>\r\n//   );\r\n// };\r\n\r\n// Certifications.propTypes = {\r\n//   data: PropTypes.array.isRequired,\r\n// };\r\n\r\n// export default Certifications;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport Certifications from '@components/sections/certifications';\r\nimport {\r\n  Layout,\r\n  Hero,\r\n  About,\r\n  Jobs,\r\n  Featured,\r\n  Projects,\r\n  Contact,\r\n  Skills,\r\n  Education,\r\n  Publications,\r\n  Extracurricular,\r\n  Awards,\r\n} from '@components';\r\nimport styled from 'styled-components';\r\nimport { Main } from '@styles';\r\n\r\nconst StyledMainContainer = styled(Main)`\r\n  counter-reset: section;\r\n`;\r\n\r\nconst IndexPage = ({ location, data }) => (\r\n  <Layout location={location}>\r\n    <StyledMainContainer className=\"fillHeight\">\r\n      <div id=\"hero\"><Hero data={data.hero.edges} /></div>\r\n      <div id=\"about\"><About data={data.about.edges} /></div>\r\n      <div id=\"skills\"><Skills data={data.skills.edges} /></div>\r\n      <div id=\"education\"><Education data={data.education.edges} /></div>\r\n      <div id=\"jobs\"><Jobs data={data.jobs.edges} /></div>\r\n      <div id=\"featured\"><Featured data={data.featured.edges} /></div>\r\n      <div id=\"projects\"><Projects data={data.projects.edges} /></div>\r\n      <div id=\"publications\"><Publications data={data.publications.edges} /></div>\r\n      <div id=\"certifications\"><Certifications data={data.certifications.edges} /></div>\r\n      <div id=\"extracurricular\"><Extracurricular data={data.extracurricular.edges} /></div>\r\n      <div id=\"awards\"><Awards data={data.awards.edges} /></div>\r\n      <div id=\"contact\"><Contact data={data.contact.edges} /></div>\r\n    </StyledMainContainer>\r\n  </Layout>\r\n);\r\n\r\nIndexPage.propTypes = {\r\n  location: PropTypes.object.isRequired,\r\n  data: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default IndexPage;\r\n\r\nexport const pageQuery = graphql`\r\n  {\r\n    hero: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/hero/\" } }) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            name\r\n            subtitle\r\n            buttonText\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n    about: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/about/\" } }) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            avatar {\r\n              childImageSharp {\r\n                fluid(maxWidth: 700, quality: 90, traceSVG: { color: \"#64ffda\" }) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n            skills\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n    skills: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/skills/\" } }) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            items {\r\n              name\r\n              description\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    education: allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/education/\" } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            institution\r\n            degree\r\n            year\r\n            url\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n    jobs: allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/jobs/\" } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            company\r\n            location\r\n            range\r\n            url\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n    featured: allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/featured/\" } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            cover {\r\n              childImageSharp {\r\n                fluid(maxWidth: 700, quality: 90, traceSVG: { color: \"#64ffda\" }) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n            tech\r\n            github\r\n            external\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n    projects: allMarkdownRemark(\r\n      filter: {\r\n        fileAbsolutePath: { regex: \"/projects/\" }\r\n        frontmatter: { showInProjects: { ne: false } }\r\n      }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            tech\r\n            github\r\n            external\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n\r\n    certifications: allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/certifications/\" } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            items {\r\n              category\r\n              certifications {\r\n                name\r\n                nameUrl\r\n                description\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    \r\n\r\n    extracurricular: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/extracurricular/\" } }) {\r\n    edges {\r\n      node {\r\n        frontmatter {\r\n          title\r\n          items {\r\n            institution\r\n            designation\r\n            period\r\n            responsibilities\r\n            url\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n    awards: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/awards/\" } }) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            items {\r\n              name\r\n              nameUrl\r\n              description\r\n              url\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    publications: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/publications/\" } }) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            items {\r\n              name\r\n              journal\r\n              year\r\n              link\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    contact: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/contact/\" } }) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            buttonText\r\n          }\r\n          html\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;"],"sourceRoot":""}