{"version":3,"sources":["webpack:///./src/components/sections/skills.js","webpack:///./src/components/sections/education.js","webpack:///./src/components/sections/publications.js","webpack:///./src/components/sections/extracurricular.js","webpack:///./src/components/sections/awards.js","webpack:///./src/pages/index.js"],"names":["SkillsContainer","styled","section","SkillCategory","div","SkillTitle","h3","SkillList","ul","Skills","revealContainer","useRef","useEffect","sr","reveal","current","skillGroups","allMarkdownRemark","edges","node","frontmatter","ref","className","map","group","i","key","category","items","item","j","EducationContainer","Education","educationList","education","edu","institution","degree","year","description","PublicationsContainer","Publication","Publications","publications","pub","title","journal","link","href","target","rel","ExtraContainer","Activity","Extracurricular","activities","act","AwardsContainer","AwardList","Awards","awards","award","StyledMainContainer","Main","pageQuery","IndexPage","location","data","hero","about","jobs","featured","projects","contact"],"mappings":"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","file":"component---src-pages-index-js-b736673e762a0c4998fb.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport sr from '../../utils/sr';\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\n\r\nconst SkillsContainer = styled.section`\r\n  max-width: 700px;\r\n  margin: 0 auto 100px;\r\n`;\r\n\r\nconst SkillCategory = styled.div`\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst SkillTitle = styled.h3`\r\n  margin-bottom: 10px;\r\n  color: var(--green);\r\n`;\r\n\r\nconst SkillList = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));\r\n  gap: 0.5rem;\r\n  list-style: disc;\r\n  padding-left: 20px;\r\n`;\r\n\r\nconst Skills = () => {\r\n  const revealContainer = useRef(null);\r\n  useEffect(() => sr.reveal(revealContainer.current), []);\r\n\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/skills/\" } }) {\r\n        edges {\r\n          node {\r\n            frontmatter {\r\n              skillGroups{\r\n                category\r\n                items\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const skillGroups = data.allMarkdownRemark.edges[0]?.node.frontmatter.skillGroups || [];\r\n\r\n  return (\r\n    <SkillsContainer ref={revealContainer}>\r\n      <h2 className=\"numbered-heading\">Skills</h2>\r\n      {skillGroups.map((group, i) => (\r\n        <SkillCategory key={i}>\r\n          <SkillTitle>{group.category}</SkillTitle>\r\n          <SkillList>\r\n            {group.items.map((item, j) => (\r\n              <li key={j}>{item}</li>\r\n            ))}\r\n          </SkillList>\r\n        </SkillCategory>\r\n      ))}\r\n    </SkillsContainer>\r\n  );\r\n};\r\n\r\nexport default Skills;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport sr from '../../utils/sr';\r\nimport { useEffect, useRef } from 'react';\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\n\r\nconst EducationContainer = styled.section`\r\n  max-width: 700px;\r\n  margin: 0 auto 100px;\r\n`;\r\n\r\nconst Education = () => {\r\n  const revealContainer = useRef(null);\r\n  useEffect(() => sr.reveal(revealContainer.current), []);\r\n\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/education/\" } }) {\r\n        edges {\r\n          node {\r\n            frontmatter {\r\n              education {\r\n                institution\r\n                degree\r\n                year\r\n                description\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const educationList = data.allMarkdownRemark.edges[0]?.node.frontmatter.education || [];\r\n\r\n  return (\r\n    <EducationContainer ref={revealContainer}>\r\n      <h2 className=\"numbered-heading\">Education</h2>\r\n      {educationList.map((edu, i) => (\r\n        <div key={i}>\r\n          <h3>{edu.institution}</h3>\r\n          <p>{edu.degree} | {edu.year}</p>\r\n          <p>{edu.description}</p>\r\n        </div>\r\n      ))}\r\n    </EducationContainer>\r\n  );\r\n};\r\n\r\nexport default Education;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport sr from '../../utils/sr';\r\nimport { useEffect, useRef } from 'react';\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\n\r\nconst PublicationsContainer = styled.section`\r\n  max-width: 700px;\r\n  margin: 0 auto 100px;\r\n`;\r\n\r\nconst Publication = styled.div`\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst Publications = () => {\r\n  const revealContainer = useRef(null);\r\n  useEffect(() => sr.reveal(revealContainer.current), []);\r\n\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/publications/\" } }) {\r\n        edges {\r\n          node {\r\n            frontmatter {\r\n              publications {\r\n                title\r\n                journal\r\n                link\r\n                year\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const publications = data.allMarkdownRemark.edges[0]?.node.frontmatter.publications || [];\r\n\r\n  return (\r\n    <PublicationsContainer ref={revealContainer}>\r\n      <h2 className=\"numbered-heading\">Publications</h2>\r\n      {publications.map((pub, i) => (\r\n        <Publication key={i}>\r\n          <h3>{pub.title}</h3>\r\n          <p><em>{pub.journal}</em> â€¢ {pub.year}</p>\r\n          {pub.link && (\r\n            <a href={pub.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Read Publication\r\n            </a>\r\n          )}\r\n        </Publication>\r\n      ))}\r\n    </PublicationsContainer>\r\n  );\r\n};\r\n\r\nexport default Publications;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport sr from '../../utils/sr';\r\nimport { useEffect, useRef } from 'react';\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\n\r\nconst ExtraContainer = styled.section`\r\n  max-width: 700px;\r\n  margin: 0 auto 100px;\r\n`;\r\n\r\nconst Activity = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Extracurricular = () => {\r\n  const revealContainer = useRef(null);\r\n  useEffect(() => sr.reveal(revealContainer.current), []);\r\n\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/extracurricular/\" } }) {\r\n        edges {\r\n          node {\r\n            frontmatter {\r\n              activities {\r\n                title\r\n                description\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const activities = data.allMarkdownRemark.edges[0]?.node.frontmatter.activities || [];\r\n\r\n  return (\r\n    <ExtraContainer ref={revealContainer}>\r\n      <h2 className=\"numbered-heading\">Extracurricular</h2>\r\n      {activities.map((act, i) => (\r\n        <Activity key={i}>\r\n          <h3>{act.title}</h3>\r\n          <p>{act.description}</p>\r\n        </Activity>\r\n      ))}\r\n    </ExtraContainer>\r\n  );\r\n};\r\n\r\nexport default Extracurricular;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport sr from '../../utils/sr';\r\nimport { useEffect, useRef } from 'react';\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\n\r\nconst AwardsContainer = styled.section`\r\n  max-width: 700px;\r\n  margin: 0 auto 100px;\r\n`;\r\n\r\nconst AwardList = styled.ul`\r\n  list-style: disc;\r\n  padding-left: 20px;\r\n`;\r\n\r\nconst Awards = () => {\r\n  const revealContainer = useRef(null);\r\n  useEffect(() => sr.reveal(revealContainer.current), []);\r\n\r\n  const data = useStaticQuery(graphql`\r\n    {\r\n      allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/awards/\" } }) {\r\n        edges {\r\n          node {\r\n            frontmatter {\r\n              awards {\r\n                title\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  const awards = data.allMarkdownRemark.edges[0]?.node.frontmatter.awards || [];\r\n\r\n  return (\r\n    <AwardsContainer ref={revealContainer}>\r\n      <h2 className=\"numbered-heading\">Awards & Achievements</h2>\r\n      <AwardList>\r\n        {awards.map((award, i) => (\r\n          <li key={i}>{award.title}</li>\r\n        ))}\r\n      </AwardList>\r\n    </AwardsContainer>\r\n  );\r\n};\r\n\r\nexport default Awards;\r\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport {\n  Layout,\n  Hero,\n  About,\n  Jobs,\n  Featured,\n  Projects,\n  Contact,\n} from '@components';\nimport styled from 'styled-components';\nimport { Main } from '@styles';\n\n// New Sections\nimport Skills from '../components/sections/skills';\nimport Education from '../components/sections/education';\nimport Publications from '../components/sections/publications';\nimport Extracurricular from '../components/sections/extracurricular';\nimport Awards from '../components/sections/awards';\n\nconst StyledMainContainer = styled(Main)`\n  counter-reset: section;\n`;\n\nconst IndexPage = ({ location, data }) => (\n  <Layout location={location}>\n    <StyledMainContainer className=\"fillHeight\">\n      <Hero data={data.hero.edges} />\n      <About data={data.about.edges} />\n      <Skills />\n      <Education />\n      <Jobs data={data.jobs.edges} />\n      <Featured data={data.featured.edges} />\n      <Projects data={data.projects.edges} />\n      <Publications />\n      <Extracurricular />\n      <Awards />\n      <Contact data={data.contact.edges} />\n    </StyledMainContainer>\n  </Layout>\n);\n\nIndexPage.propTypes = {\n  location: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  {\n    hero: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/hero/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            name\n            subtitle\n            buttonText\n          }\n          html\n        }\n      }\n    }\n    about: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/about/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            avatar {\n              childImageSharp {\n                fluid(maxWidth: 700, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            skills\n          }\n          html\n        }\n      }\n    }\n    jobs: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/jobs/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            company\n            location\n            range\n            url\n          }\n          html\n        }\n      }\n    }\n    featured: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/featured/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 700, quality: 90, traceSVG: { color: \"#64ffda\" }) {\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\n                }\n              }\n            }\n            tech\n            github\n            external\n          }\n          html\n        }\n      }\n    }\n    projects: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"/projects/\" }\n        frontmatter: { showInProjects: { ne: false } }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            tech\n            github\n            external\n          }\n          html\n        }\n      }\n    }\n    contact: allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/contact/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            title\n            buttonText\n          }\n          html\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}